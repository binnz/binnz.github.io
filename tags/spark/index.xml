<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spark on California Dreaming</title>
    <link>https://binnz.github.io/tags/spark/</link>
    <description>Recent content in Spark on California Dreaming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 17 Sep 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://binnz.github.io/tags/spark/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spark MLlib Programming Practice with Airline Dataset</title>
      <link>https://binnz.github.io/post/2018-09-17-spark-mllib/</link>
      <pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://binnz.github.io/post/2018-09-17-spark-mllib/</guid>
      <description>&lt;p&gt;In this document, I will build a predictive framework for predicting whether each flight in &lt;code&gt;2006&lt;/code&gt; will be cancelled or not by using the data from &lt;code&gt;2000&lt;/code&gt; to &lt;code&gt;2005&lt;/code&gt; as training data.&lt;/p&gt;
&lt;p&gt;Items to be delivered in this document includes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Show the predictive framework you designed. What features do you extract? What algorithms do you use in the framework?&lt;/li&gt;
&lt;li&gt;Explain the validation method you use.&lt;/li&gt;
&lt;li&gt;Explain the evaluation metric you use and show the effectiveness of your framework (i.e., use confusion matrix)&lt;/li&gt;
&lt;li&gt;Show the validation results and give a summary of results.&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Spark Programming Practice on Hadoop Platform</title>
      <link>https://binnz.github.io/post/2018-06-14-hadoop-spark/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://binnz.github.io/post/2018-06-14-hadoop-spark/</guid>
      <description>&lt;p&gt;The goal of this document is to practice Spark programming on Hadoop platform with the following problems.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In the text file (&lt;code&gt;Youvegottofindwhatyoulove.txt&lt;/code&gt;), show the &lt;strong&gt;top 30 most frequent occurring words&lt;/strong&gt; and their &lt;strong&gt;average occurrences in a sentence&lt;/strong&gt;   According to the result, what are the characteristics of these words?&lt;/li&gt;
&lt;li&gt;Implement a program to calculate the &lt;strong&gt;average amount in credit card trip for different number of passengers&lt;/strong&gt; which are from one to four passengers in &lt;strong&gt;2017.09&lt;/strong&gt; NYC Yellow Taxi trip data. In NYC Taxi data, the &amp;ldquo;Passenger_count&amp;rdquo; is a driver-entered value. Explain also how you &lt;strong&gt;deal with the data loss issue&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;For each of the above task 1 and 2, &lt;strong&gt;compare the execution time on local worker and yarn cluster&lt;/strong&gt;. Also, give some discussions on your observation.&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Simple Examples with Spark Streaming</title>
      <link>https://binnz.github.io/post/2017-05-02-spark-streaming/</link>
      <pubDate>Tue, 02 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://binnz.github.io/post/2017-05-02-spark-streaming/</guid>
      <description>&lt;p&gt;Types of queries one wants on answer on a data stream:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sampling data from a stream - Construct a random sample&lt;/li&gt;
&lt;li&gt;Queries over sliding windows - Number of items of type x in the last k elements of the stream&lt;/li&gt;
&lt;li&gt;Filtering a data stream - Select elements with property x from the stream&lt;/li&gt;
&lt;li&gt;Counting distinct elements - Number of distinct elements in the last k elements of the stream&lt;/li&gt;
&lt;li&gt;Estimating moments - Estimate average/std deviation of last k elements&lt;/li&gt;
&lt;li&gt;Finding frequent elements&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Spark Machine Learning Modules</title>
      <link>https://binnz.github.io/post/2017-04-11-spark-machine-learning-modules/</link>
      <pubDate>Tue, 11 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://binnz.github.io/post/2017-04-11-spark-machine-learning-modules/</guid>
      <description>&lt;p&gt;This project is aiming for simple access and usage of machine learning on Spark.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Brief Introduction of Spark Usage</title>
      <link>https://binnz.github.io/post/2017-03-28-brief-intro-of-spark-usage/</link>
      <pubDate>Tue, 28 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://binnz.github.io/post/2017-03-28-brief-intro-of-spark-usage/</guid>
      <description>&lt;p&gt;Apache Spark is a fast and general-purpose cluster computing system. It provides high-level APIs in &lt;strong&gt;Java, Scala, Python and R&lt;/strong&gt;, and an optimized engine that supports general execution graphs. It also supports a rich set of higher-level tools including Spark SQL for SQL and structured data processing, MLlib for machine learning, GraphX for graph processing, and Spark Streaming.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Change Schema of a Spark SQL DataFrame?</title>
      <link>https://binnz.github.io/post/2017-03-28-how-to-change-schema-of-a-spark-sql-dataframe/</link>
      <pubDate>Tue, 28 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://binnz.github.io/post/2017-03-28-how-to-change-schema-of-a-spark-sql-dataframe/</guid>
      <description>&lt;p&gt;For the reason that I want to insert &lt;code&gt;rows selected from a table&lt;/code&gt; (&lt;em&gt;df_rows&lt;/em&gt;) to another table, I need to make sure that&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;The schema of the rows selected are the same as the schema of the table
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Since the function &lt;code&gt;pyspark.sql.DataFrameWriter.insertInto&lt;/code&gt;, which inserts the content of the DataFrame to the specified table, requires that the schema of the class:DataFrame is the same as the schema of the table.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Spark SQL Using Python</title>
      <link>https://binnz.github.io/post/2017-03-28-spark-sql-using-python/</link>
      <pubDate>Tue, 28 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://binnz.github.io/post/2017-03-28-spark-sql-using-python/</guid>
      <description>&lt;p&gt;For SQL users, Spark SQL provides state-of-the-art SQL performance and maintains compatibility with Shark/Hive. In particular, like Shark, Spark SQL supports all existing Hive data formats, user-defined functions (UDF), and the Hive metastore. With features that will be introduced in Apache Spark 1.1.0, Spark SQL beats Shark in TPC-DS performance by almost an order of magnitude.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Logistic Regression Deployment Using Java Spark</title>
      <link>https://binnz.github.io/post/2017-03-21-logistic-regression-deployment/</link>
      <pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://binnz.github.io/post/2017-03-21-logistic-regression-deployment/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Machine Learning on Spark using Java</title>
      <link>https://binnz.github.io/post/2017-03-21-ml-on-spark-using-java/</link>
      <pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://binnz.github.io/post/2017-03-21-ml-on-spark-using-java/</guid>
      <description>&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://spark.apache.org/downloads.html&#34;&gt;Download Apache Spark&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;MLlib is a built-in library of Spark&lt;/li&gt;
&lt;li&gt;Spark supports Python, Scala, and Java&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://spark.apache.org/docs/latest/programming-guide.html&#34;&gt;Spark Programming Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://spark.apache.org/docs/latest/configuration.html&#34;&gt;Sark Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/apache/spark/tree/master/examples/src/main/java/org/apache/spark/examples&#34;&gt;Spark Java Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://spark.apache.org/docs/latest/ml-guide.html&#34;&gt;MLlib Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mapr.com/blog/apache-spark-machine-learning-tutorial&#34;&gt;Apache Spark Machine Learning Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://spark.apache.org/docs/latest/api/java/index.html&#34;&gt;Spark Java API doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.bigsynapse.com/sampling-large-datasets-using-spark&#34;&gt;Sampling Large Datasets using Spark&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
